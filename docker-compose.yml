version: "3.8"
services:
  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    ports:
      - "${APP_PORT}:${APP_PORT}"
    restart: always
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      WWWUSER: "${WWWUSER}"
    env_file: .env
    networks:
      boilerplate_network:
        aliases:
          - "backend"
    healthcheck:
      test: curl http://localhost:${APP_PORT}/health || exit 1
      start_period: 20s
  db:
    image: postgres:15.3
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-example}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-example}"
      POSTGRES_DB: "${POSTGRES_DB:-example}"
      PGPORT: "${POSTGRES_PORT:-5432}"
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      boilerplate_network:
        aliases:
          - "db"
  adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8080}:8080"

volumes:
  postgres: ~
networks:
  boilerplate_network:
    name: boilerplate-shared-network
    driver: bridge
